[{"/Users/michaelparkadze/Repos/react-typescript-chat-app/src/index.tsx":"1","/Users/michaelparkadze/Repos/react-typescript-chat-app/src/reportWebVitals.ts":"2","/Users/michaelparkadze/Repos/react-typescript-chat-app/src/App.tsx":"3","/Users/michaelparkadze/Repos/react-typescript-chat-app/src/views/SignUp/index.tsx":"4","/Users/michaelparkadze/Repos/react-typescript-chat-app/src/firebase/index.ts":"5","/Users/michaelparkadze/Repos/react-typescript-chat-app/src/routes/index.tsx":"6","/Users/michaelparkadze/Repos/react-typescript-chat-app/src/routes/PrivateRoute.tsx":"7","/Users/michaelparkadze/Repos/react-typescript-chat-app/src/views/Chat/index.tsx":"8","/Users/michaelparkadze/Repos/react-typescript-chat-app/src/routes/PublicRoute.tsx":"9","/Users/michaelparkadze/Repos/react-typescript-chat-app/src/firebase/groups.ts":"10","/Users/michaelparkadze/Repos/react-typescript-chat-app/src/containers/CreateGroup/index.tsx":"11","/Users/michaelparkadze/Repos/react-typescript-chat-app/src/firebase/users.ts":"12","/Users/michaelparkadze/Repos/react-typescript-chat-app/src/containers/Menu/index.tsx":"13","/Users/michaelparkadze/Repos/react-typescript-chat-app/src/containers/ContactsTab/index.tsx":"14","/Users/michaelparkadze/Repos/react-typescript-chat-app/src/containers/CreateContact/index.tsx":"15","/Users/michaelparkadze/Repos/react-typescript-chat-app/src/containers/ConversationsTab/index.tsx":"16","/Users/michaelparkadze/Repos/react-typescript-chat-app/src/containers/CreateConversation/index.tsx":"17","/Users/michaelparkadze/Repos/react-typescript-chat-app/src/components/ContactCard/index.tsx":"18","/Users/michaelparkadze/Repos/react-typescript-chat-app/src/components/SelectedContactPill/index.tsx":"19","/Users/michaelparkadze/Repos/react-typescript-chat-app/src/containers/ChatRoom/index.tsx":"20","/Users/michaelparkadze/Repos/react-typescript-chat-app/src/firebase/messages.ts":"21","/Users/michaelparkadze/Repos/react-typescript-chat-app/src/components/ChatMessage/index.tsx":"22","/Users/michaelparkadze/Repos/react-typescript-chat-app/src/components/ConversationCard/index.tsx":"23","/Users/michaelparkadze/Repos/react-typescript-chat-app/src/containers/UploadProfileImage/index.tsx":"24","/Users/michaelparkadze/Repos/react-typescript-chat-app/src/views/SignIn/index.tsx":"25"},{"size":592,"mtime":1611919771027,"results":"26","hashOfConfig":"27"},{"size":425,"mtime":1611828545235,"results":"28","hashOfConfig":"27"},{"size":220,"mtime":1611910854590,"results":"29","hashOfConfig":"27"},{"size":3956,"mtime":1614529940746,"results":"30","hashOfConfig":"27"},{"size":548,"mtime":1614177525742,"results":"31","hashOfConfig":"27"},{"size":1142,"mtime":1614614324624,"results":"32","hashOfConfig":"27"},{"size":386,"mtime":1614614394422,"results":"33","hashOfConfig":"27"},{"size":1676,"mtime":1614622141237,"results":"34","hashOfConfig":"27"},{"size":378,"mtime":1614530256648,"results":"35","hashOfConfig":"27"},{"size":2898,"mtime":1614621978116,"results":"36","hashOfConfig":"27"},{"size":2245,"mtime":1612523596741,"results":"37","hashOfConfig":"27"},{"size":3101,"mtime":1614435857082,"results":"38","hashOfConfig":"27"},{"size":2877,"mtime":1614622064907,"results":"39","hashOfConfig":"27"},{"size":1773,"mtime":1614612926889,"results":"40","hashOfConfig":"27"},{"size":2478,"mtime":1612525331505,"results":"41","hashOfConfig":"27"},{"size":1480,"mtime":1614621477050,"results":"42","hashOfConfig":"27"},{"size":6093,"mtime":1614622020542,"results":"43","hashOfConfig":"27"},{"size":696,"mtime":1614439189169,"results":"44","hashOfConfig":"27"},{"size":824,"mtime":1614439587089,"results":"45","hashOfConfig":"27"},{"size":3113,"mtime":1614622147931,"results":"46","hashOfConfig":"27"},{"size":587,"mtime":1612619888162,"results":"47","hashOfConfig":"27"},{"size":1322,"mtime":1614432023072,"results":"48","hashOfConfig":"27"},{"size":533,"mtime":1614173688907,"results":"49","hashOfConfig":"27"},{"size":712,"mtime":1614177516154,"results":"50","hashOfConfig":"27"},{"size":2157,"mtime":1614529622538,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1vos0jp",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"/Users/michaelparkadze/Repos/react-typescript-chat-app/src/index.tsx",[],["110","111"],"/Users/michaelparkadze/Repos/react-typescript-chat-app/src/reportWebVitals.ts",[],"/Users/michaelparkadze/Repos/react-typescript-chat-app/src/App.tsx",["112","113"],"import Routes from \"./routes\";\n\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\n\nfunction App() {\n  return <Routes />;\n}\n\nexport default App;\n","/Users/michaelparkadze/Repos/react-typescript-chat-app/src/views/SignUp/index.tsx",[],"/Users/michaelparkadze/Repos/react-typescript-chat-app/src/firebase/index.ts",[],"/Users/michaelparkadze/Repos/react-typescript-chat-app/src/routes/index.tsx",[],"/Users/michaelparkadze/Repos/react-typescript-chat-app/src/routes/PrivateRoute.tsx",[],"/Users/michaelparkadze/Repos/react-typescript-chat-app/src/views/Chat/index.tsx",["114"],"/Users/michaelparkadze/Repos/react-typescript-chat-app/src/routes/PublicRoute.tsx",[],"/Users/michaelparkadze/Repos/react-typescript-chat-app/src/firebase/groups.ts",["115","116"],"/Users/michaelparkadze/Repos/react-typescript-chat-app/src/containers/CreateGroup/index.tsx",["117","118","119"],"import React, { useState } from \"react\";\nimport { auth } from \"../../firebase\";\nimport { createGroupChat } from \"../../firebase/groups\";\nimport { Modal, Input } from \"antd\";\n\ninterface GroupUsers {\n  uid: string;\n}\n\ninterface Props {\n  isModalVisible: boolean;\n  setIsModalVisible: any;\n}\n\nexport default function CreateGroup(props: Props) {\n  const [groupName, setGroupName] = useState(\"\");\n  const [userToAdd, setUserToAdd] = useState(\"\");\n  const [groupUsers, setGroupUsers] = useState([] as string[]);\n\n  const { isModalVisible, setIsModalVisible } = props;\n\n  const handleModalHide = () => {\n    setIsModalVisible(false);\n    setGroupName(\"\");\n    setUserToAdd(\"\");\n    setGroupUsers([]);\n  };\n\n  const handleGroupNameInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    event.preventDefault();\n\n    setGroupName(event.target.value);\n  };\n\n  const handleUserToAddInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    event.preventDefault();\n\n    setUserToAdd(event.target.value);\n  };\n\n  const handleAddUserToGroup = (\n    event: React.KeyboardEvent<HTMLInputElement>\n  ) => {\n    // Check if enter was pressed\n    if (event.key === \"Enter\") {\n      if (userToAdd.length > 1) {\n        setGroupUsers((prevState) => [...prevState, userToAdd]);\n        setUserToAdd(\"\");\n      }\n    }\n  };\n\n  // const handleCreateGroup = (users: GroupUsers[]) => {\n  //   if (auth.currentUser) {\n  //     createGroupChat({\n  //       users: users,\n  //       createdBy: auth.currentUser.uid,\n  //       groupName: groupName,\n  //       isPrivate: users.length > 2,\n  //     });\n  //   }\n  // };\n\n  return (\n    <>\n      <Modal\n        title=\"Create a Group Chat\"\n        visible={isModalVisible}\n        onCancel={handleModalHide}\n        // onOk={() => handleCreateGroup([{ uid: \"hello\" }])}\n        okText=\"Create Group\"\n      >\n        Enter group name:\n        <Input type=\"text\" value={groupName} onChange={handleGroupNameInput} />\n        Enter user email to add to group:\n        <Input\n          type=\"text\"\n          value={userToAdd}\n          onChange={handleUserToAddInput}\n          onKeyPress={handleAddUserToGroup}\n        />\n        Group users\n        <span>{JSON.stringify(groupUsers)}</span>\n      </Modal>\n    </>\n  );\n}\n",["120","121"],"/Users/michaelparkadze/Repos/react-typescript-chat-app/src/firebase/users.ts",[],"/Users/michaelparkadze/Repos/react-typescript-chat-app/src/containers/Menu/index.tsx",["122","123","124","125","126"],"/Users/michaelparkadze/Repos/react-typescript-chat-app/src/containers/ContactsTab/index.tsx",[],"/Users/michaelparkadze/Repos/react-typescript-chat-app/src/containers/CreateContact/index.tsx",["127","128"],"import React, { useState } from \"react\";\nimport { auth } from \"../../firebase\";\nimport { addContact, fetchContacts } from \"../../firebase/users\";\nimport { Modal, Input } from \"antd\";\n\ninterface Contacts {\n  contactName: string;\n  uid: string;\n}\n\ninterface Props {\n  contacts: Contacts[];\n  isModalVisible: boolean;\n  setIsModalVisible: any;\n  toFetchContacts: boolean;\n  setToFetchContacts: any;\n}\n\nconst initialContactState = {\n  contactName: \"\",\n  uid: \"\",\n};\n\nexport default function CreateContact(props: Props) {\n  const [contactDetails, setContactDetails] = useState(initialContactState);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const {\n    isModalVisible,\n    setIsModalVisible,\n    setToFetchContacts,\n    toFetchContacts,\n  } = props;\n\n  const handleModalHide = () => {\n    setIsModalVisible(false);\n    setContactDetails(initialContactState);\n    setError(\"\");\n  };\n\n  const handleOnChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    event.preventDefault();\n    setError(\"\");\n\n    setContactDetails((prevState) => ({\n      ...prevState,\n      [event.target.name]: event.target.value,\n    }));\n  };\n\n  const handleCreateContact = () => {\n    if (contactDetails.uid && contactDetails.contactName) {\n      setLoading(true);\n      addContact(contactDetails).then((res) => {\n        console.log(res);\n        if (res) {\n          setError(res);\n          setLoading(false);\n        } else {\n          setLoading(false);\n          handleModalHide();\n          setToFetchContacts(!toFetchContacts);\n        }\n      });\n    } else {\n      setError(\"All input fields must be filled\");\n    }\n  };\n\n  return (\n    <>\n      <Modal\n        title=\"Create a new contact\"\n        visible={isModalVisible}\n        onCancel={handleModalHide}\n        onOk={() => handleCreateContact()}\n        okText=\"Create Contact\"\n        confirmLoading={loading}\n      >\n        Enter contact's name:\n        <Input\n          type=\"text\"\n          name=\"contactName\"\n          value={contactDetails.contactName}\n          onChange={(e) => handleOnChange(e)}\n        />\n        Enter contact's id:\n        <Input\n          type=\"text\"\n          name=\"uid\"\n          value={contactDetails.uid}\n          onChange={(e) => handleOnChange(e)}\n          style={{ marginBottom: 8 }}\n        />\n        {error.length > 1 && (\n          <div style={{ color: \"red\", fontSize: \"0.75rem\" }}>{error}</div>\n        )}\n      </Modal>\n    </>\n  );\n}\n","/Users/michaelparkadze/Repos/react-typescript-chat-app/src/containers/ConversationsTab/index.tsx",[],"/Users/michaelparkadze/Repos/react-typescript-chat-app/src/containers/CreateConversation/index.tsx",["129","130","131","132"],"/Users/michaelparkadze/Repos/react-typescript-chat-app/src/components/ContactCard/index.tsx",["133"],"import React from \"react\";\nimport \"./styles.scss\";\n\ninterface Props {\n  contactName: string;\n  contactId: string;\n  contactImage: string;\n  onClick?: () => void;\n}\n\nexport default function ContactCard(props: Props) {\n  const { contactName, contactId, contactImage, onClick } = props;\n  return (\n    <div className=\"contact-card\" onClick={onClick}>\n      <div className=\"contact-card__image\">\n        <div\n          style={{\n            backgroundImage: `url('${contactImage}')`,\n            backgroundSize: \"cover\",\n          }}\n        >\n          {contactImage ? null : contactName[0]}\n        </div>\n      </div>\n      <div className=\"contact-card__name\">{contactName}</div>\n    </div>\n  );\n}\n","/Users/michaelparkadze/Repos/react-typescript-chat-app/src/components/SelectedContactPill/index.tsx",[],"/Users/michaelparkadze/Repos/react-typescript-chat-app/src/containers/ChatRoom/index.tsx",[],"/Users/michaelparkadze/Repos/react-typescript-chat-app/src/firebase/messages.ts",[],"/Users/michaelparkadze/Repos/react-typescript-chat-app/src/components/ChatMessage/index.tsx",["134"],"import { useEffect, useState } from \"react\";\nimport { auth } from \"../../firebase\";\nimport { fetchUser } from \"../../firebase/users\";\nimport \"./styles.scss\";\n\ninterface Props {\n  text: string;\n  uid: string;\n  createdAt?: any;\n}\n\nfunction toDateTime(secs: number) {\n  var t = new Date(0); // Epoch\n  t.setUTCSeconds(secs);\n  var hours = t.getHours();\n  var minutes = t.getMinutes();\n\n  return (\n    <span>\n      {hours > 9 ? hours : <>0{hours}</>}:\n      {minutes > 9 ? minutes : <>0{minutes}</>}\n    </span>\n  );\n}\n\nexport default function ChatMessage(props: Props) {\n  const [test, setTest] = useState(null as any);\n  const { text, uid, createdAt } = props;\n\n  const messageType = uid === auth.currentUser?.uid ? \"sent\" : \"received\";\n\n  useEffect(() => {\n    fetchUser(uid).then((user) => setTest(user));\n    // setTest(user);\n    // console.log(user);\n  }, []);\n\n  return (\n    <>\n      {test && (\n        <div className={`message ${messageType}`}>\n          <div className=\"message__content\">\n            <div className=\"message__content__sender\">{test.displayName}</div>\n            <div className=\"message__content__text\">{text}</div>\n            <p className=\"message__content__at\">\n              {createdAt && toDateTime(createdAt.seconds)}\n            </p>\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n","/Users/michaelparkadze/Repos/react-typescript-chat-app/src/components/ConversationCard/index.tsx",["135"],"import React from \"react\";\nimport \"./styles.scss\";\n\ninterface Props {\n  conversationName: string;\n  conversationId: string;\n  onClick?: () => void;\n}\n\nexport default function ConversationCard(props: Props) {\n  const { conversationName, conversationId, onClick } = props;\n  return (\n    <div className=\"conversation-card\" onClick={onClick}>\n      <div className=\"conversation-card__image\">\n        <div>{conversationName[0]}</div>\n      </div>\n      <div className=\"conversation-card__name\">{conversationName}</div>\n    </div>\n  );\n}\n","/Users/michaelparkadze/Repos/react-typescript-chat-app/src/containers/UploadProfileImage/index.tsx",["136","137","138"],"/Users/michaelparkadze/Repos/react-typescript-chat-app/src/views/SignIn/index.tsx",[],{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":3,"column":10,"nodeType":"145","messageId":"146","endLine":3,"endColumn":22},{"ruleId":"143","severity":1,"message":"147","line":4,"column":10,"nodeType":"145","messageId":"146","endLine":4,"endColumn":27},{"ruleId":"143","severity":1,"message":"148","line":4,"column":10,"nodeType":"145","messageId":"146","endLine":4,"endColumn":21},{"ruleId":"149","severity":1,"message":"150","line":67,"column":7,"nodeType":"151","messageId":"152","endLine":67,"endColumn":81},{"ruleId":"149","severity":1,"message":"150","line":88,"column":11,"nodeType":"151","messageId":"152","endLine":88,"endColumn":52},{"ruleId":"143","severity":1,"message":"153","line":2,"column":10,"nodeType":"145","messageId":"146","endLine":2,"endColumn":14},{"ruleId":"143","severity":1,"message":"154","line":3,"column":10,"nodeType":"145","messageId":"146","endLine":3,"endColumn":25},{"ruleId":"143","severity":1,"message":"155","line":6,"column":11,"nodeType":"145","messageId":"146","endLine":6,"endColumn":21},{"ruleId":"139","replacedBy":"156"},{"ruleId":"141","replacedBy":"157"},{"ruleId":"143","severity":1,"message":"158","line":4,"column":3,"nodeType":"145","messageId":"146","endLine":4,"endColumn":24},{"ruleId":"143","severity":1,"message":"159","line":7,"column":25,"nodeType":"145","messageId":"146","endLine":7,"endColumn":38},{"ruleId":"143","severity":1,"message":"160","line":8,"column":10,"nodeType":"145","messageId":"146","endLine":8,"endColumn":21},{"ruleId":"143","severity":1,"message":"148","line":8,"column":23,"nodeType":"145","messageId":"146","endLine":8,"endColumn":34},{"ruleId":"143","severity":1,"message":"161","line":24,"column":10,"nodeType":"145","messageId":"146","endLine":24,"endColumn":24},{"ruleId":"143","severity":1,"message":"153","line":2,"column":10,"nodeType":"145","messageId":"146","endLine":2,"endColumn":14},{"ruleId":"143","severity":1,"message":"159","line":3,"column":22,"nodeType":"145","messageId":"146","endLine":3,"endColumn":35},{"ruleId":"143","severity":1,"message":"162","line":25,"column":10,"nodeType":"145","messageId":"146","endLine":25,"endColumn":21},{"ruleId":"143","severity":1,"message":"163","line":34,"column":5,"nodeType":"145","messageId":"146","endLine":34,"endColumn":21},{"ruleId":"164","severity":1,"message":"165","line":64,"column":6,"nodeType":"166","endLine":64,"endColumn":31,"suggestions":"167"},{"ruleId":"143","severity":1,"message":"168","line":100,"column":15,"nodeType":"145","messageId":"146","endLine":100,"endColumn":22},{"ruleId":"143","severity":1,"message":"169","line":12,"column":24,"nodeType":"145","messageId":"146","endLine":12,"endColumn":33},{"ruleId":"164","severity":1,"message":"170","line":36,"column":6,"nodeType":"166","endLine":36,"endColumn":8,"suggestions":"171"},{"ruleId":"143","severity":1,"message":"172","line":11,"column":29,"nodeType":"145","messageId":"146","endLine":11,"endColumn":43},{"ruleId":"143","severity":1,"message":"173","line":1,"column":17,"nodeType":"145","messageId":"146","endLine":1,"endColumn":25},{"ruleId":"143","severity":1,"message":"174","line":2,"column":10,"nodeType":"145","messageId":"146","endLine":2,"endColumn":17},{"ruleId":"143","severity":1,"message":"175","line":3,"column":17,"nodeType":"145","messageId":"146","endLine":3,"endColumn":22},"no-native-reassign",["176"],"no-negated-in-lhs",["177"],"@typescript-eslint/no-unused-vars","'useAuthState' is defined but never used.","Identifier","unusedVar","'useCollectionData' is defined but never used.","'deleteGroup' is defined but never used.","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","'auth' is defined but never used.","'createGroupChat' is defined but never used.","'GroupUsers' is defined but never used.",["176"],["177"],"'ConversationInterface' is defined but never used.","'fetchContacts' is defined but never used.","'fetchGroups' is defined but never used.","'isModalVisible' is assigned a value but never used.","'searchInput' is assigned a value but never used.","'handleSelectChat' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'availableContacts' and 'selectedContacts'. Either include them or remove the dependency array.","ArrayExpression",["178"],"'groupId' is assigned a value but never used.","'contactId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'uid'. Either include it or remove the dependency array.",["179"],"'conversationId' is assigned a value but never used.","'useState' is defined but never used.","'storage' is defined but never used.","'Input' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},"Update the dependencies array to be: [availableContacts, selectedContacts, selectedContacts.length]",{"range":"184","text":"185"},"Update the dependencies array to be: [uid]",{"range":"186","text":"187"},[2064,2089],"[availableContacts, selectedContacts, selectedContacts.length]",[860,862],"[uid]"]